
package travelagency;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TravelAgencyWS", targetNamespace = "http://travelagency/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TravelAgencyWS {


    /**
     * 
     * @param origin
     * @param destination
     * @param currency
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod(operationName = "SearchFlight")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "SearchFlight", targetNamespace = "http://travelagency/", className = "travelagency.SearchFlight")
    @ResponseWrapper(localName = "SearchFlightResponse", targetNamespace = "http://travelagency/", className = "travelagency.SearchFlightResponse")
    @Action(input = "http://travelagency/TravelAgencyWS/SearchFlightRequest", output = "http://travelagency/TravelAgencyWS/SearchFlightResponse")
    public List<Object> searchFlight(
        @WebParam(name = "origin", targetNamespace = "")
        String origin,
        @WebParam(name = "destination", targetNamespace = "")
        String destination,
        @WebParam(name = "currency", targetNamespace = "")
        String currency);

    /**
     * 
     * @param passengers
     * @param origin
     * @param destination
     * @param airline
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod(operationName = "Book")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Book", targetNamespace = "http://travelagency/", className = "travelagency.Book")
    @ResponseWrapper(localName = "BookResponse", targetNamespace = "http://travelagency/", className = "travelagency.BookResponse")
    @Action(input = "http://travelagency/TravelAgencyWS/BookRequest", output = "http://travelagency/TravelAgencyWS/BookResponse")
    public List<Object> book(
        @WebParam(name = "origin", targetNamespace = "")
        String origin,
        @WebParam(name = "destination", targetNamespace = "")
        String destination,
        @WebParam(name = "airline", targetNamespace = "")
        String airline,
        @WebParam(name = "passengers", targetNamespace = "")
        int passengers);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "originCities", targetNamespace = "http://travelagency/", className = "travelagency.OriginCities")
    @ResponseWrapper(localName = "originCitiesResponse", targetNamespace = "http://travelagency/", className = "travelagency.OriginCitiesResponse")
    @Action(input = "http://travelagency/TravelAgencyWS/originCitiesRequest", output = "http://travelagency/TravelAgencyWS/originCitiesResponse")
    public List<Object> originCities();

    /**
     * 
     * @param origin
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "originAirport", targetNamespace = "http://travelagency/", className = "travelagency.OriginAirport")
    @ResponseWrapper(localName = "originAirportResponse", targetNamespace = "http://travelagency/", className = "travelagency.OriginAirportResponse")
    @Action(input = "http://travelagency/TravelAgencyWS/originAirportRequest", output = "http://travelagency/TravelAgencyWS/originAirportResponse")
    public String originAirport(
        @WebParam(name = "origin", targetNamespace = "")
        String origin);

    /**
     * 
     * @param toCurr
     * @param fromCurr
     * @return
     *     returns java.lang.Double
     */
    @WebMethod(operationName = "GetConversionRate")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetConversionRate", targetNamespace = "http://travelagency/", className = "travelagency.GetConversionRate")
    @ResponseWrapper(localName = "GetConversionRateResponse", targetNamespace = "http://travelagency/", className = "travelagency.GetConversionRateResponse")
    @Action(input = "http://travelagency/TravelAgencyWS/GetConversionRateRequest", output = "http://travelagency/TravelAgencyWS/GetConversionRateResponse")
    public Double getConversionRate(
        @WebParam(name = "fromCurr", targetNamespace = "")
        String fromCurr,
        @WebParam(name = "toCurr", targetNamespace = "")
        String toCurr);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod(operationName = "GetCurrencyCodes")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetCurrencyCodes", targetNamespace = "http://travelagency/", className = "travelagency.GetCurrencyCodes")
    @ResponseWrapper(localName = "GetCurrencyCodesResponse", targetNamespace = "http://travelagency/", className = "travelagency.GetCurrencyCodesResponse")
    @Action(input = "http://travelagency/TravelAgencyWS/GetCurrencyCodesRequest", output = "http://travelagency/TravelAgencyWS/GetCurrencyCodesResponse")
    public List<Object> getCurrencyCodes();

    /**
     * 
     * @param destination
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "destinationAirport", targetNamespace = "http://travelagency/", className = "travelagency.DestinationAirport")
    @ResponseWrapper(localName = "destinationAirportResponse", targetNamespace = "http://travelagency/", className = "travelagency.DestinationAirportResponse")
    @Action(input = "http://travelagency/TravelAgencyWS/destinationAirportRequest", output = "http://travelagency/TravelAgencyWS/destinationAirportResponse")
    public String destinationAirport(
        @WebParam(name = "destination", targetNamespace = "")
        String destination);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "destinationCities", targetNamespace = "http://travelagency/", className = "travelagency.DestinationCities")
    @ResponseWrapper(localName = "destinationCitiesResponse", targetNamespace = "http://travelagency/", className = "travelagency.DestinationCitiesResponse")
    @Action(input = "http://travelagency/TravelAgencyWS/destinationCitiesRequest", output = "http://travelagency/TravelAgencyWS/destinationCitiesResponse")
    public List<Object> destinationCities();

}
