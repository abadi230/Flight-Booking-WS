
import Directions.instructions;
import java.io.Serializable;
import java.util.Iterator;
import java.util.*;
import java.util.StringTokenizer;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import travelagency.OriginCities;
//import org.me.traveagency.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author abadi
 */
public class TravelAgencyJFrame extends javax.swing.JFrame {
   List originC = originCities();
   List destinationC = destinationCities();
    /**
     * Creates new form TravelAgencyJFrame
     */

    public TravelAgencyJFrame() {
        initComponents();
        //populate compo box with currency list
        List ls = getCurrencyCodes();        
        for(int i =0 ; i < ls.size(); i++) compCurrency.addItem((String) ls.get(i));
        // Source: http://www.dreamincode.net/forums/topic/166333-how-do-i-populate-jcombobox-with-arraylist/
        
        for(int i=0; i < originC.size(); i++) CompFrom.addItem((String) originC.get(i));
        
        for(int i=0; i < destinationC.size(); i++) CompTo.addItem((String) destinationC.get(i));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txt_from = new javax.swing.JTextField();
        txt_to = new javax.swing.JTextField();
        btn_Search = new javax.swing.JButton();
        comPassenger = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabl_deals = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_offer = new javax.swing.JTextArea();
        compCurrency = new javax.swing.JComboBox<>();
        btn_Book = new javax.swing.JButton();
        checkDirect = new javax.swing.JCheckBox();
        btb_drive = new javax.swing.JButton();
        CompFrom = new javax.swing.JComboBox<>();
        CompTo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setText(" Travel Agency");

        txt_from.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_fromFocusGained(evt);
            }
        });

        txt_to.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_toFocusGained(evt);
            }
        });

        btn_Search.setText("Search flights");
        btn_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SearchActionPerformed(evt);
            }
        });

        comPassenger.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1", "2", "3", "4", "5", "6", "7", "8" }));

        jLabel2.setText("From");

        jLabel3.setText("To");

        jLabel4.setText("Travellers");

        tabl_deals.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airline", "From", "To", "Stops", "Available Seets", "Currency", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabl_deals);

        txt_offer.setColumns(20);
        txt_offer.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        txt_offer.setRows(5);
        jScrollPane2.setViewportView(txt_offer);

        compCurrency.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                compCurrencyItemStateChanged(evt);
            }
        });

        btn_Book.setText("Book Flight");
        btn_Book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BookActionPerformed(evt);
            }
        });

        checkDirect.setText("Direct");
        checkDirect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkDirectActionPerformed(evt);
            }
        });

        btb_drive.setText("Driving Mode");
        btb_drive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btb_driveActionPerformed(evt);
            }
        });

        CompFrom.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CompFromItemStateChanged(evt);
            }
        });

        CompTo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CompToItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(368, 368, 368)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(279, 279, 279)
                        .addComponent(compCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(154, 154, 154)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(checkDirect)
                                        .addGap(18, 18, 18)
                                        .addComponent(btn_Search))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txt_from, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel2))
                                            .addComponent(CompFrom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(33, 33, 33)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_to, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                                            .addComponent(jLabel3)
                                            .addComponent(CompTo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(21, 21, 21)
                                                .addComponent(comPassenger, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btb_drive)
                                .addGap(12, 12, 12))
                            .addComponent(btn_Book, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1027, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(compCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CompFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CompTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comPassenger, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Search)
                    .addComponent(checkDirect)
                    .addComponent(btb_drive))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Book)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SearchActionPerformed
        DefaultTableModel model= (DefaultTableModel) tabl_deals.getModel();//define table
        
        int air = 0,fromC = 1,toC= 2,stop = 3,seat = 4,curr= 5,price = 6;        
        
        //get user input in origin city(from)
        String from = txt_from.getText();
        //get user input in destination city(to)
        String to = txt_to.getText();
        int counter=0;// number of column 
   
        //source for jtable: https://docs.oracle.com/javase/7/docs/api/javax/swing/JTable.html
            //get the flight from tonightFlight
        List flyRequest = searchFlight(from, to, compCurrency.getSelectedItem().toString());
        // display the offer in text area
        txt_offer.setText (flyRequest.toString());
           
            if(model.getRowCount() > 0)
                {// clare the rows
                    for(int i = model.getRowCount() -1; i > -1; i--)
                    {
                        model.removeRow(i);
                    }
                }
            if(flyRequest.size()>counter+5)
            {
               while(flyRequest.size()>counter)
                { // fill table
                    model.addRow(new Object[]{flyRequest.get(air),flyRequest.get(fromC),
                    flyRequest.get(toC),flyRequest.get(stop),flyRequest.get(seat),flyRequest.get(curr),
                    flyRequest.get(price)});


                    counter+=7;// if this request flight has more flight
                    air+=7; fromC+=7; toC+=7; stop+=7; seat+=7; curr+=7; price+=7;

                } 
            }else{
               txt_offer.setText("There are no flights today from "+txt_from.getText()+" To "+txt_to.getText());
            }
            
            checkDirect.setSelected(false);
    }//GEN-LAST:event_btn_SearchActionPerformed

    private void txt_toFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_toFocusGained
        txt_to.setText("");
    }//GEN-LAST:event_txt_toFocusGained

    private void btn_BookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BookActionPerformed

        String originC, toC, air;
        int row;
        row = tabl_deals.getSelectedRow();
        if(row == -1) { // if the row is not selected
            txt_offer.setText("No flight selected");
        }else{ //book flight
            originC= (String) tabl_deals.getValueAt(row, 1);
            toC= (String) tabl_deals.getValueAt(row, 2);
            air= (String) tabl_deals.getValueAt(row, 0);
            int passengers= comPassenger.getSelectedIndex();
            if(passengers==0)txt_offer.setText("Select number of passengers");
            else txt_offer.setText("Booking successful");
            
            book(originC, toC, air, passengers);
        }
        
        
    }//GEN-LAST:event_btn_BookActionPerformed

    private void compCurrencyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_compCurrencyItemStateChanged
   // convert price
       
       DefaultTableModel model= (DefaultTableModel) tabl_deals.getModel();//define table
        String Currency; //selected item from list currency
        String currencyConvert;// get first 3 characters to use it in getConversionRate function
        double value = 0; // get the price of flight
        double changeCurr = 0; //Conversion Rate
        int tcurrency = 5;    //get the column of currency from the table
        int tPrice =6;        // get the column of price from the table
        int counter=0;        //
        int row=0;
        int price=6;          // get price from tonightFlight list
             try {
                //get the flight from tonightFlight
                List flyRequest = searchFlight(txt_from.getText(), txt_to.getText(), compCurrency.getSelectedItem().toString());
                while(flyRequest.size()>counter)
                {
                    value= (double) flyRequest.get(price);
                    Currency= (String) compCurrency.getSelectedItem();
                    currencyConvert = Currency.substring(0,3);// get first 3 charactar 
                    changeCurr = getConversionRate("GBP", currencyConvert);
                    double result = value * changeCurr;
                    model.setValueAt(compCurrency.getSelectedItem().toString(), row, tcurrency);// modify currency
                    model.setValueAt(result, row, tPrice);// modify price
                    price+=7;
                    row++;
                }
//              
            } catch (Exception e) {
                
            }
    }//GEN-LAST:event_compCurrencyItemStateChanged

    private void checkDirectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkDirectActionPerformed
        DefaultTableModel model= (DefaultTableModel) tabl_deals.getModel();//define table
        int connection= 3;// element of stop from flight list
        
        if(checkDirect.isSelected())
        {
            for(int i = model.getRowCount() -1; i > -1; i--)
                {// clare the rows 
                    connection= (Integer) tabl_deals.getValueAt(i, 3);
                    if(connection !=0)
                    {
                        model.removeRow(i);
                    }
                   
                }
        }
    }//GEN-LAST:event_checkDirectActionPerformed

    private void btb_driveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btb_driveActionPerformed
        String instruction,from,to;
        from= txt_from.getText();
        to= txt_to.getText();
        for(int i=0; i < originC.size(); i++)
        {
            if(originC.get(i).equals(from))originAirport(from);
        }
        for(int i=0; i < destinationC.size(); i++)
        {
            if(destinationC.get(i).equals(to))destinationAirport(to);
        }
        String value = "";
        //get instructions and distance from xml
        instruction=getDirections(from, to);
        //split String by ','
        //https://www.mkyong.com/java/java-stringtokenizer-example/
        StringTokenizer st = new StringTokenizer(instruction, ",");
        while(st.hasMoreElements()){
            value+= st.nextElement();//set Value of instruction in value
        }
        String result = value.replace("[", "");
        txt_offer.setText(result.replace("]", ""));
    }//GEN-LAST:event_btb_driveActionPerformed

    private void txt_fromFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_fromFocusGained
        txt_from.setText("");
    }//GEN-LAST:event_txt_fromFocusGained

    private void CompFromItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CompFromItemStateChanged
        txt_from.setText(CompFrom.getSelectedItem().toString());
    }//GEN-LAST:event_CompFromItemStateChanged

    private void CompToItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CompToItemStateChanged
        txt_to.setText(CompTo.getSelectedItem().toString());
    }//GEN-LAST:event_CompToItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TravelAgencyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TravelAgencyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TravelAgencyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TravelAgencyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TravelAgencyJFrame().setVisible(true);
            }
        });
     
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CompFrom;
    private javax.swing.JComboBox<String> CompTo;
    private javax.swing.JButton btb_drive;
    private javax.swing.JButton btn_Book;
    private javax.swing.JButton btn_Search;
    private javax.swing.JCheckBox checkDirect;
    private javax.swing.JComboBox<String> comPassenger;
    private javax.swing.JComboBox<String> compCurrency;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabl_deals;
    private javax.swing.JTextField txt_from;
    private javax.swing.JTextArea txt_offer;
    private javax.swing.JTextField txt_to;
    // End of variables declaration//GEN-END:variables


    
    private static Document getDocument(String docString) {
         //reference: http://www.newthinktank.com/2012/06/java-video-tutorial-44/
         //https://www.mkyong.com/java/how-to-read-xml-file-in-java-dom-parser/
        try {
			
            // API used to convert XML into a DOM object tree
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();

            // Provides access to the documents data
            DocumentBuilder dBuilder = factory.newDocumentBuilder();

            // Takes the document / parse xml 
            Document doc = dBuilder.parse(new InputSource(docString)); 
           
            return doc;
            }

            catch(Exception ex){

                    System.out.println(ex.getMessage());

            }

            return null;
            
    }
    private static String getDirections(String from, String to)throws NullPointerException{
        Directions.instructions instr = new instructions();
        String xml= instr.getXml(from,to);//get directions from restful
       
        List resultList = new ArrayList();
        
        //create Document instance then set getDocument method on this instance
        Document docXML = getDocument(xml);
       if(!docXML.getElementsByTagName("status").item(0).getTextContent().equals("OK"))resultList.add("Directions not found");
        // The nodelist contains all of the steps,distances in the xml file
        NodeList step = docXML.getElementsByTagName("step");
        NodeList Distance = docXML.getElementsByTagName("distance");
        
        for (int i = 0; i < step.getLength(); i++) {
            Node nNode= step.item(i);// node step
            Node nNodeD= Distance.item(i);// node distane
            
                 if(nNode.getNodeType() == Node.ELEMENT_NODE){
                     Element eElement = (Element)nNode; // to get the instructions node from (step) nodeList
                     Element eElementD = (Element)nNodeD;
                     
                     String distance = eElementD.getElementsByTagName("text").item(0).getTextContent();
                     String instruction= eElement.getElementsByTagName("html_instructions").item(0).getTextContent();
                     String html_instructions = instruction.replaceAll("\\<.*?>","");
                     html_instructions.replaceAll("</b>", "");
                     html_instructions.replaceAll("<b>", "");
                     html_instructions.replaceAll("<div style=\"font-size:0.9em\">", "");
                     distance.replace(",","");
                     List list = new ArrayList();
                    list.add("instructions: "+html_instructions);
                    list.add("\n");
                    list.add("distance: "+distance);
                    list.add("\n\n");
                     resultList.add(list);
                 }
            
        }
            return resultList.toString();
    }

    private static java.util.List<java.lang.Object> book(java.lang.String origin, java.lang.String destination, java.lang.String airline, int passengers) {
        travelagency.TravelAgencyWS_Service service = new travelagency.TravelAgencyWS_Service();
        travelagency.TravelAgencyWS port = service.getTravelAgencyWSPort();
        return port.book(origin, destination, airline, passengers);
    }

    private static Double getConversionRate(java.lang.String fromCurr, java.lang.String toCurr) {
        travelagency.TravelAgencyWS_Service service = new travelagency.TravelAgencyWS_Service();
        travelagency.TravelAgencyWS port = service.getTravelAgencyWSPort();
        return port.getConversionRate(fromCurr, toCurr);
    }

    private static java.util.List<java.lang.Object> getCurrencyCodes() {
        travelagency.TravelAgencyWS_Service service = new travelagency.TravelAgencyWS_Service();
        travelagency.TravelAgencyWS port = service.getTravelAgencyWSPort();
        return port.getCurrencyCodes();
    }

    private static java.util.List<java.lang.Object> searchFlight(java.lang.String origin, java.lang.String destination, java.lang.String currency) {
        travelagency.TravelAgencyWS_Service service = new travelagency.TravelAgencyWS_Service();
        travelagency.TravelAgencyWS port = service.getTravelAgencyWSPort();
        return port.searchFlight(origin, destination, currency);
    }

    private static java.util.List<java.lang.Object> originCities() {
        travelagency.TravelAgencyWS_Service service = new travelagency.TravelAgencyWS_Service();
        travelagency.TravelAgencyWS port = service.getTravelAgencyWSPort();
        return port.originCities();
    }

    private static java.util.List<java.lang.Object> destinationCities() {
        travelagency.TravelAgencyWS_Service service = new travelagency.TravelAgencyWS_Service();
        travelagency.TravelAgencyWS port = service.getTravelAgencyWSPort();
        return port.destinationCities();
    }

    private static String destinationAirport(java.lang.String destination) {
        travelagency.TravelAgencyWS_Service service = new travelagency.TravelAgencyWS_Service();
        travelagency.TravelAgencyWS port = service.getTravelAgencyWSPort();
        return port.destinationAirport(destination);
    }

    private static String originAirport(java.lang.String origin) {
        travelagency.TravelAgencyWS_Service service = new travelagency.TravelAgencyWS_Service();
        travelagency.TravelAgencyWS port = service.getTravelAgencyWSPort();
        return port.originAirport(origin);
    }
 
}
